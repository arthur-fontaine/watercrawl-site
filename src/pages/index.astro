---
import Layout from "../layouts/Layout.astro";
// import waterBackground3840x2160Webm from "../assets/water-background-3840-2160.webm";
import waterBackground3840x2160Mp4 from "../assets/water-background-3840-2160.mp4";
// import waterBackground2560x1440Webm from "../assets/water-background-2560-1440.webm";
import waterBackground2560x1440Mp4 from "../assets/water-background-2560-1440.mp4";
// import waterBackground1920x1080Webm from "../assets/water-background-1920-1080.webm";
import waterBackground1920x1080Mp4 from "../assets/water-background-1920-1080.mp4";
// import waterBackground1600x900Webm from "../assets/water-background-1600-900.webm";
import waterBackground1600x900Mp4 from "../assets/water-background-1600-900.mp4";
// import waterBackground1280x720Webm from "../assets/water-background-1280-720.webm";
import waterBackground1280x720Mp4 from "../assets/water-background-1280-720.mp4";
// import waterBackground1024x576Webm from "../assets/water-background-1024-576.webm";
import waterBackground1024x576Mp4 from "../assets/water-background-1024-576.mp4";
// import waterBackground854x480Webm from "../assets/water-background-854-480.webm";
import waterBackground854x480Mp4 from "../assets/water-background-854-480.mp4";
import { Code } from "astro:components";
import Codeblock from "../components/Codeblock.astro";
---

<head>
	<link rel="preload" href={waterBackground3840x2160Mp4} as="video" type="video/mp4" media="(min-height: 1440px)" />
	<link rel="preload" href={waterBackground2560x1440Mp4} as="video" type="video/mp4" media="(min-height: 1080px)" />
	<link rel="preload" href={waterBackground1920x1080Mp4} as="video" type="video/mp4" media="(min-height: 900px)" />
	<link rel="preload" href={waterBackground1600x900Mp4} as="video" type="video/mp4" media="(min-height: 720px)" />
	<link rel="preload" href={waterBackground1280x720Mp4} as="video" type="video/mp4" media="(min-height: 576px)" />
	<link rel="preload" href={waterBackground1024x576Mp4} as="video" type="video/mp4" media="(min-height: 480px)" />
	<link rel="preload" href={waterBackground1920x1080Mp4} as="video" type="video/mp4" />
</head>

<Layout>
  <video
    autoplay
    loop
    muted
    playsinline
    class="fixed inset-0 w-lvw h-lvh object-cover -z-10"
  >
		<!-- <source src={waterBackground3840x2160Webm} type="video/webm" media="(min-height: 1440px)" /> -->
		<source src={waterBackground3840x2160Mp4} type="video/mp4" media="(min-height: 1440px)" />
		<!-- <source src={waterBackground2560x1440Webm} type="video/webm" media="(min-height: 1080px)" /> -->
		<source src={waterBackground2560x1440Mp4} type="video/mp4" media="(min-height: 1080px)" />
		<!-- <source src={waterBackground1920x1080Webm} type="video/webm" media="(min-height: 900px)" /> -->
		<source src={waterBackground1920x1080Mp4} type="video/mp4" media="(min-height: 900px)" />
		<!-- <source src={waterBackground1600x900Webm} type="video/webm" media="(min-height: 720px)" /> -->
		<source src={waterBackground1600x900Mp4} type="video/mp4" media="(min-height: 720px)" />
		<!-- <source src={waterBackground1280x720Webm} type="video/webm" media="(min-height: 576px)" /> -->
		<source src={waterBackground1280x720Mp4} type="video/mp4" media="(min-height: 576px)" />
		<!-- <source src={waterBackground1024x576Webm} type="video/webm" media="(min-height: 480px)" /> -->
		<source src={waterBackground1024x576Mp4} type="video/mp4" media="(min-height: 480px)" />
		<!-- <source src={waterBackground854x480Webm} type="video/webm" media="(min-height: 0px)" /> -->
		<source src={waterBackground854x480Mp4} type="video/mp4" media="(min-height: 360px)" />
		<source src={waterBackground1920x1080Mp4} type="video/mp4" />
  </video>

  <header
    class="flex flex-col items-center justify-center gap-2 w-full h-full min-h-svh text-white px-4"
  >
		<div class="fixed flex flex-col items-center justify-center gap-2 ">
			<h1 class="font-title text-8xl md:text-9xl">Watercrawl</h1>
			<p class="font-body text-3xl font-light text-balance text-center leading-snug mt-2">
				Crawl and scrape the web as fluidly as water.<br>Unlock an ocean of data.
			</p>
		</div>
  </header>

  <main
    class="max-w-4xl mx-auto -translate-y-[25svh] bg-black/60 px-8 py-16 md:px-16 rounded-t-4xl text-white backdrop-blur-md"
  >
    <section>
      <h2 class="font-title text-4xl text-balance">
        Setup a crawler/scraper in seconds
      </h2>

      <p class="font-body font-light text-lg mt-4 opacity-80">
        With Watercrawl, you can create a new crawler <em>and</em> scraper in seconds.
        Just run the following command and follow the instructions.
      </p>

      <Codeblock lang="bash" class="mt-8" copyButton>
        bun create watercrawl # you can also use `npm create watercrawl`
      </Codeblock>
    </section>

		<section class="mt-16">
			<h2 class="font-title text-4xl text-balance">Advanced Usage <span class="opacity-60 italic">(maybe not for you)</span></h2>

			<p class="font-body font-light text-lg mt-4 opacity-80">
				Running the command above and following the instructions will generate all the necessary files for your crawler/scraper.
				But you can still customize your setup by modifying the configuration files.
			</p>

			<h3 class="font-title text-3xl text-balance mt-8">Browser</h3>

			<p class="font-body font-light text-lg mt-4 opacity-80">
				You can configure the browser used by your crawler by exporting a <Codeblock inline>browser</Codeblock> object in your configuration file (usually <Codeblock inline>flow.ts</Codeblock>).
			</p>

			<Codeblock lang="javascript" class="mt-4" copyButton>
				import {`{ /* the browser you want to use */ }`} from "watercrawl/browsers";

				export const browser = /* your browser instance */
			</Codeblock>

			<p class="font-body font-light text-lg mt-4 opacity-80">
				Here is a list of browsers included out of the box:
			</p>

			<ul class="font-body font-light text-lg mt-4 opacity-80 list-disc pl-8">
				<li>
					<a href="https://github.com/arthur-fontaine/watercrawl#:~:text=%2C%0A%7D)-,PuppeteerBrowser,-%3A%20Fetches%20the%20page" target="_blank" rel="noopener noreferrer">
						<span class="underline">Puppeteer</span> <span class="opacity-60 italic">(default)</span></a
					>: Uses a Google Chrome instance to fetch the page. Useful for websites that require JavaScript to render.
				</li>

				<li>
					<a href="https://github.com/arthur-fontaine/watercrawl#:~:text=HappyDomBrowser,-%3A%20Fetches%20the%20page" target="_blank" rel="noopener noreferrer">
						<span class="underline">HappyDom</span></a
					>: Uses HappyDom to fetch the page and query the DOM. Ideal for static websites. Faster than Puppeteer but can't execute JavaScript.
				</li>

				<li>
					<a href="https://github.com/arthur-fontaine/watercrawl#:~:text=%F0%9F%8C%90%20Browsers-,FetchBrowser,-%3A%20Fetches%20the%20page" target="_blank" rel="noopener noreferrer">
						<span class="underline">Fetch</span></a
					>: Uses Fetch to retrieve the page. Ideal for simple HTTP requests without rendering.
				</li>

				<li>
					<a href="https://github.com/arthur-fontaine/watercrawl#:~:text=Implement%20your%20owns-,Browser,-import%20type%20%7B" target="_blank" rel="noopener noreferrer">
						<span class="underline">Implement your own</span></a
					>: You can create your own browser by exporting a class that implements the <Codeblock inline>Browser</Codeblock> interface.
				</li>
			</ul>

			<h3 class="font-title text-3xl text-balance mt-8">AI</h3>

			<p class="font-body font-light text-lg mt-4 opacity-80">
				The AI is responsible for generating the results of your scraper.<br>
				You can configure the LLM (Large Language Model) used by your scraper by exporting an <Codeblock inline>ai</Codeblock> object in your configuration file (usually <Codeblock inline>flow.ts</Codeblock>).
			</p>

			<Codeblock lang="javascript" class="mt-4" copyButton>
				import {`{ /* the ai you want to use */ }`} from "watercrawl/ais";

				export const ai = /* your ai instance */
			</Codeblock>

			<p class="font-body font-light text-lg mt-4 opacity-80">
				Here is a list of LLMs included out of the box:
			</p>

			<ul class="font-body font-light text-lg mt-4 opacity-80 list-disc pl-8">
				<li>
					<a href="https://github.com/arthur-fontaine/watercrawl#:~:text=%F0%9F%A7%A0%20AIs-,OpenAI,-%3A%20Uses%20the%20OpenAI" target="_blank" rel="noopener noreferrer">
						<span class="underline">OpenAI</span> <span class="opacity-60 italic">(default)</span></a
					>: Uses the OpenAI API to generate text.
				</li>

				<li>
					<a href="https://github.com/arthur-fontaine/watercrawl#:~:text=%2C%0A%7D)-,MultiAI,-%3A%20If%20an%20AI" target="_blank" rel="noopener noreferrer">
						<span class="underline">MultiAI</span></a
					>: If one of your AI instances fails, it will try the next one in the list. Useful if you have access to multiple AI APIs with different quotas.
				</li>

				<li>
					<a href="https://github.com/arthur-fontaine/watercrawl#:~:text=it%20as%20%60browser%60-,AI,-import%20type%20%7B" target="_blank" rel="noopener noreferrer">
						<span class="underline">Implement your own</span></a
					>: You can create your own AI by exporting a class that implements the <Codeblock inline>AI</Codeblock> interface.
				</li>
			</ul>

			<h3 class="font-title text-3xl text-balance mt-8">Queue</h3>

			<p class="font-body font-light text-lg mt-4 opacity-80">
				Queues are used to manage the websites to visit. See it as a to-do list for your crawler.<br>
				You can configure the queue used by your crawler by exporting a <Codeblock inline>queue</Codeblock> object in your configuration file (usually <Codeblock inline>flow.ts</Codeblock>).
			</p>

			<Codeblock lang="javascript" class="mt-4" copyButton>
				import {`{ /* the queue you want to use */ }`} from "watercrawl/queues";

				export const queue = /* your queue instance */
			</Codeblock>

			<p class="font-body font-light text-lg mt-4 opacity-80">
				Here is a list of queues included out of the box:
			</p>

			<ul class="font-body font-light text-lg mt-4 opacity-80 list-disc pl-8">
				<li>
					<a href="https://github.com/arthur-fontaine/watercrawl#:~:text=%E2%8F%B3%20Queues-,BullQueue,-%3A%20Uses%20Bull%20as" target="_blank" rel="noopener noreferrer">
						<span class="underline">Bull</span> <span class="opacity-60 italic">(default)</span></a
					>: Uses Bull and Redis to manage the queue. Ideal for distributed systems.
				</li>

				<li>
					<a href="https://github.com/arthur-fontaine/watercrawl#:~:text=%2C%0A%7D)-,JsQueue,-%3A%20Uses%20an%20in" target="_blank" rel="noopener noreferrer">
						<span class="underline">JsQueue</span></a
					>: Uses an in-memory queue. Ideal for simple setups.
				</li>

				<li>
					<a href="https://github.com/arthur-fontaine/watercrawl#:~:text=it%20as%20%60ai%60-,Queue,-import%20type%20%7B" target="_blank" rel="noopener noreferrer">
						<span class="underline">Implement your own</span></a
					>: You can create your own queue by exporting a class that implements the <Codeblock inline>Queue</Codeblock> interface.
				</li>
			</ul>
		</section>

		<section class="mt-16">
			<h2 class="font-title text-4xl text-balance">Open Source</h2>
			
			<p class="font-body font-light text-lg mt-4 opacity-80">
				Watercrawl is proudly open source. You can find the source code on{" "}
				<a
					href="https://github.com/arthur-fontaine/watercrawl"
					class="text-white underline font-regular"
					target="_blank"
					rel="noopener noreferrer"
				>
					GitHub<a
				/>.
			</p>
		</section>
	</main>
</Layout>
